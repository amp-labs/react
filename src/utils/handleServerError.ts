import { ResponseError } from '@generated/api/src';

/**
 * handles server error generated by sdk (Response Error) and sets error state
 * @param error could be unknown error or ResponseError
 * @param setError callback to set error state
 */
export const handleServerError = async (error: any, setError: (error: string) => void) => {
  if (error instanceof ResponseError) {
    const { status, statusText } = error.response;

    if (status === 500) {
      console.error('Internal Server Error (500):', statusText);
    } else if (status === 400) {
      console.error('Bad Request (400):', statusText);
    } else {
      console.error(`Error (${status}):`, statusText);
    }
    const errorBody = await error.response.json(); // If the response body contains error details
    const errorMsg = errorBody?.causes?.join('\n') || '[ERROR] Creating installation failed.';
    console.error('[Error Message]', errorMsg);
    setError(errorMsg);
  } else {
    console.error('Unexpected error:', error.message);
  }
};
