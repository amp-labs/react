/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FieldUpsertResult } from './FieldUpsertResult';
import {
    FieldUpsertResultFromJSON,
    FieldUpsertResultFromJSONTyped,
    FieldUpsertResultToJSON,
} from './FieldUpsertResult';

/**
 * Response containing results for all created/updated fields
 * @export
 * @interface UpsertMetadataResponse
 */
export interface UpsertMetadataResponse {
    /**
     * Indicates if the upsert operation was successful
     * @type {boolean}
     * @memberof UpsertMetadataResponse
     */
    success: boolean;
    /**
     * Maps object name -> field name -> upsert result
     * @type {{ [key: string]: { [key: string]: FieldUpsertResult; }; }}
     * @memberof UpsertMetadataResponse
     */
    fields: { [key: string]: { [key: string]: FieldUpsertResult; }; };
}

/**
 * Check if a given object implements the UpsertMetadataResponse interface.
 */
export function instanceOfUpsertMetadataResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "success" in value;
    isInstance = isInstance && "fields" in value;

    return isInstance;
}

export function UpsertMetadataResponseFromJSON(json: any): UpsertMetadataResponse {
    return UpsertMetadataResponseFromJSONTyped(json, false);
}

export function UpsertMetadataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpsertMetadataResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': json['success'],
        'fields': json['fields'],
    };
}

export function UpsertMetadataResponseToJSON(value?: UpsertMetadataResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'fields': value.fields,
    };
}

