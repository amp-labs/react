/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A custom input field for authentication. This is used by the frontend to dynamically render input fields for custom auth. The backend will not interpret this. It will however receive the value of this field before making a request (in the connection secrets).
 * @export
 * @interface CustomAuthInput
 */
export interface CustomAuthInput {
    /**
     * The internal identifier for the custom auth input field.
     * @type {string}
     * @memberof CustomAuthInput
     */
    name: string;
    /**
     * The human-readable name for the custom auth input field.
     * @type {string}
     * @memberof CustomAuthInput
     */
    displayName: string;
    /**
     * Some helpful text or context to be displayed to the user when asking for this input.
     * @type {string}
     * @memberof CustomAuthInput
     */
    prompt?: string;
    /**
     * URL with details about this authentication mechanism and how to use it. Might be specific to this field, or a general URL for the provider. Optional.
     * @type {string}
     * @memberof CustomAuthInput
     */
    docsURL?: string;
}

/**
 * Check if a given object implements the CustomAuthInput interface.
 */
export function instanceOfCustomAuthInput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "displayName" in value;

    return isInstance;
}

export function CustomAuthInputFromJSON(json: any): CustomAuthInput {
    return CustomAuthInputFromJSONTyped(json, false);
}

export function CustomAuthInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomAuthInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'displayName': json['displayName'],
        'prompt': !exists(json, 'prompt') ? undefined : json['prompt'],
        'docsURL': !exists(json, 'docsURL') ? undefined : json['docsURL'],
    };
}

export function CustomAuthInputToJSON(value?: CustomAuthInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'displayName': value.displayName,
        'prompt': value.prompt,
        'docsURL': value.docsURL,
    };
}

