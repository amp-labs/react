/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AssociationChangeEvent
 */
export interface AssociationChangeEvent {
    /**
     * If always, the integration will subscribe to association change events.
     * @type {string}
     * @memberof AssociationChangeEvent
     */
    enabled?: AssociationChangeEventEnabledEnum;
    /**
     * If true, the integration will include full records in the event payload.
     * @type {boolean}
     * @memberof AssociationChangeEvent
     */
    includeFullRecords?: boolean;
}


/**
 * @export
 */
export const AssociationChangeEventEnabledEnum = {
    Always: 'always'
} as const;
export type AssociationChangeEventEnabledEnum = typeof AssociationChangeEventEnabledEnum[keyof typeof AssociationChangeEventEnabledEnum];


/**
 * Check if a given object implements the AssociationChangeEvent interface.
 */
export function instanceOfAssociationChangeEvent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AssociationChangeEventFromJSON(json: any): AssociationChangeEvent {
    return AssociationChangeEventFromJSONTyped(json, false);
}

export function AssociationChangeEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssociationChangeEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'includeFullRecords': !exists(json, 'includeFullRecords') ? undefined : json['includeFullRecords'],
    };
}

export function AssociationChangeEventToJSON(value?: AssociationChangeEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'includeFullRecords': value.includeFullRecords,
    };
}

