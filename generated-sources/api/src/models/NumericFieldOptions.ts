/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Additional options for numeric fields
 * @export
 * @interface NumericFieldOptions
 */
export interface NumericFieldOptions {
    /**
     * Total number of digits (for decimal types)
     * @type {number}
     * @memberof NumericFieldOptions
     */
    precision?: number;
    /**
     * Number of digits to the right of the decimal point (for decimal types)
     * @type {number}
     * @memberof NumericFieldOptions
     */
    scale?: number;
    /**
     * Minimum value for numeric fields
     * @type {number}
     * @memberof NumericFieldOptions
     */
    min?: number;
    /**
     * Maximum value for numeric fields
     * @type {number}
     * @memberof NumericFieldOptions
     */
    max?: number;
    /**
     * Default value for the field
     * @type {number}
     * @memberof NumericFieldOptions
     */
    defaultValue?: number;
}

/**
 * Check if a given object implements the NumericFieldOptions interface.
 */
export function instanceOfNumericFieldOptions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NumericFieldOptionsFromJSON(json: any): NumericFieldOptions {
    return NumericFieldOptionsFromJSONTyped(json, false);
}

export function NumericFieldOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): NumericFieldOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'precision': !exists(json, 'precision') ? undefined : json['precision'],
        'scale': !exists(json, 'scale') ? undefined : json['scale'],
        'min': !exists(json, 'min') ? undefined : json['min'],
        'max': !exists(json, 'max') ? undefined : json['max'],
        'defaultValue': !exists(json, 'defaultValue') ? undefined : json['defaultValue'],
    };
}

export function NumericFieldOptionsToJSON(value?: NumericFieldOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'precision': value.precision,
        'scale': value.scale,
        'min': value.min,
        'max': value.max,
        'defaultValue': value.defaultValue,
    };
}

