/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BillingAccount
 */
export interface BillingAccount {
    /**
     * The billing account ID.
     * @type {string}
     * @memberof BillingAccount
     */
    id: string;
    /**
     * The display name of the billing account.
     * @type {string}
     * @memberof BillingAccount
     */
    displayName: string;
    /**
     * The billing provider that this account is associated with.
     * @type {string}
     * @memberof BillingAccount
     */
    billingProvider: string;
    /**
     * The ID used by the billing provider to identify the account.
     * @type {string}
     * @memberof BillingAccount
     */
    billingProviderRef: string;
    /**
     * The time the billing account was created.
     * @type {Date}
     * @memberof BillingAccount
     */
    createTime?: Date;
    /**
     * The time the billing account was last updated.
     * @type {Date}
     * @memberof BillingAccount
     */
    updateTime?: Date;
}

/**
 * Check if a given object implements the BillingAccount interface.
 */
export function instanceOfBillingAccount(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "billingProvider" in value;
    isInstance = isInstance && "billingProviderRef" in value;

    return isInstance;
}

export function BillingAccountFromJSON(json: any): BillingAccount {
    return BillingAccountFromJSONTyped(json, false);
}

export function BillingAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): BillingAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'displayName': json['displayName'],
        'billingProvider': json['billingProvider'],
        'billingProviderRef': json['billingProviderRef'],
        'createTime': !exists(json, 'createTime') ? undefined : (new Date(json['createTime'])),
        'updateTime': !exists(json, 'updateTime') ? undefined : (new Date(json['updateTime'])),
    };
}

export function BillingAccountToJSON(value?: BillingAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'displayName': value.displayName,
        'billingProvider': value.billingProvider,
        'billingProviderRef': value.billingProviderRef,
        'createTime': value.createTime === undefined ? undefined : (value.createTime.toISOString()),
        'updateTime': value.updateTime === undefined ? undefined : (value.updateTime.toISOString()),
    };
}

