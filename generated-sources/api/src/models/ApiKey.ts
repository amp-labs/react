/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiKey
 */
export interface ApiKey {
    /**
     * The API key.
     * @type {string}
     * @memberof ApiKey
     */
    key: string;
    /**
     * A short name for the API key.
     * @type {string}
     * @memberof ApiKey
     */
    label: string;
    /**
     * The scopes for the API key.
     * @type {Array<string>}
     * @memberof ApiKey
     */
    scopes: Array<string>;
    /**
     * The project ID.
     * @type {string}
     * @memberof ApiKey
     */
    projectId: string;
    /**
     * Whether the API key is active.
     * @type {boolean}
     * @memberof ApiKey
     */
    active?: boolean;
}

/**
 * Check if a given object implements the ApiKey interface.
 */
export function instanceOfApiKey(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "key" in value;
    isInstance = isInstance && "label" in value;
    isInstance = isInstance && "scopes" in value;
    isInstance = isInstance && "projectId" in value;

    return isInstance;
}

export function ApiKeyFromJSON(json: any): ApiKey {
    return ApiKeyFromJSONTyped(json, false);
}

export function ApiKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiKey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key': json['key'],
        'label': json['label'],
        'scopes': json['scopes'],
        'projectId': json['projectId'],
        'active': !exists(json, 'active') ? undefined : json['active'],
    };
}

export function ApiKeyToJSON(value?: ApiKey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key': value.key,
        'label': value.label,
        'scopes': value.scopes,
        'projectId': value.projectId,
        'active': value.active,
    };
}

