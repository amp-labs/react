/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Action } from './Action';
import {
    ActionFromJSON,
    ActionFromJSONTyped,
    ActionToJSON,
} from './Action';

/**
 * 
 * @export
 * @interface Integration1
 */
export interface Integration1 {
    /**
     * 
     * @type {string}
     * @memberof Integration1
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Integration1
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof Integration1
     */
    api?: string;
    /**
     * 
     * @type {Array<Action>}
     * @memberof Integration1
     */
    actions?: Array<Action>;
}

/**
 * Check if a given object implements the Integration1 interface.
 */
export function instanceOfIntegration1(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function Integration1FromJSON(json: any): Integration1 {
    return Integration1FromJSONTyped(json, false);
}

export function Integration1FromJSONTyped(json: any, ignoreDiscriminator: boolean): Integration1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'api': !exists(json, 'api') ? undefined : json['api'],
        'actions': !exists(json, 'actions') ? undefined : ((json['actions'] as Array<any>).map(ActionFromJSON)),
    };
}

export function Integration1ToJSON(value?: Integration1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'displayName': value.displayName,
        'api': value.api,
        'actions': value.actions === undefined ? undefined : ((value.actions as Array<any>).map(ActionToJSON)),
    };
}

