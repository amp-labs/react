/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenMetadataFieldsOtherFieldsInner
 */
export interface TokenMetadataFieldsOtherFieldsInner {
    /**
     * The internal name of the field
     * @type {string}
     * @memberof TokenMetadataFieldsOtherFieldsInner
     */
    name: string;
    /**
     * The human-readable name of the field
     * @type {string}
     * @memberof TokenMetadataFieldsOtherFieldsInner
     */
    displayName: string;
    /**
     * jq expression that extracts and transforms the value from the token response
     * @type {string}
     * @memberof TokenMetadataFieldsOtherFieldsInner
     */
    jqValueSelector: string;
}

/**
 * Check if a given object implements the TokenMetadataFieldsOtherFieldsInner interface.
 */
export function instanceOfTokenMetadataFieldsOtherFieldsInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "jqValueSelector" in value;

    return isInstance;
}

export function TokenMetadataFieldsOtherFieldsInnerFromJSON(json: any): TokenMetadataFieldsOtherFieldsInner {
    return TokenMetadataFieldsOtherFieldsInnerFromJSONTyped(json, false);
}

export function TokenMetadataFieldsOtherFieldsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenMetadataFieldsOtherFieldsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'displayName': json['displayName'],
        'jqValueSelector': json['jqValueSelector'],
    };
}

export function TokenMetadataFieldsOtherFieldsInnerToJSON(value?: TokenMetadataFieldsOtherFieldsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'displayName': value.displayName,
        'jqValueSelector': value.jqValueSelector,
    };
}

