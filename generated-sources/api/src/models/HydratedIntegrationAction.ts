/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActionType } from './ActionType';
import {
    ActionTypeFromJSON,
    ActionTypeFromJSONTyped,
    ActionTypeToJSON,
} from './ActionType';
import type { HydratedIntegrationObject } from './HydratedIntegrationObject';
import {
    HydratedIntegrationObjectFromJSON,
    HydratedIntegrationObjectFromJSONTyped,
    HydratedIntegrationObjectToJSON,
} from './HydratedIntegrationObject';

/**
 * 
 * @export
 * @interface HydratedIntegrationAction
 */
export interface HydratedIntegrationAction {
    /**
     * 
     * @type {ActionType}
     * @memberof HydratedIntegrationAction
     */
    type: ActionType;
    /**
     * 
     * @type {string}
     * @memberof HydratedIntegrationAction
     */
    schedule?: string;
    /**
     * 
     * @type {Array<HydratedIntegrationObject>}
     * @memberof HydratedIntegrationAction
     */
    standardObjects?: Array<HydratedIntegrationObject>;
}

/**
 * Check if a given object implements the HydratedIntegrationAction interface.
 */
export function instanceOfHydratedIntegrationAction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function HydratedIntegrationActionFromJSON(json: any): HydratedIntegrationAction {
    return HydratedIntegrationActionFromJSONTyped(json, false);
}

export function HydratedIntegrationActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): HydratedIntegrationAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': ActionTypeFromJSON(json['type']),
        'schedule': !exists(json, 'schedule') ? undefined : json['schedule'],
        'standardObjects': !exists(json, 'standardObjects') ? undefined : ((json['standardObjects'] as Array<any>).map(HydratedIntegrationObjectFromJSON)),
    };
}

export function HydratedIntegrationActionToJSON(value?: HydratedIntegrationAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': ActionTypeToJSON(value.type),
        'schedule': value.schedule,
        'standardObjects': value.standardObjects === undefined ? undefined : ((value.standardObjects as Array<any>).map(HydratedIntegrationObjectToJSON)),
    };
}

