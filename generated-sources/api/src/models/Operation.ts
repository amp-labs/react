/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Operation
 */
export interface Operation {
    /**
     * The operation ID.
     * @type {string}
     * @memberof Operation
     */
    id: string;
    /**
     * The Ampersand project ID.
     * @type {string}
     * @memberof Operation
     */
    projectId: string;
    /**
     * The action type to perform for the given object.
     * @type {string}
     * @memberof Operation
     */
    actionType: string;
    /**
     * The provider object name to perform the action for
     * @type {string}
     * @memberof Operation
     */
    objectName: string;
    /**
     * The Ampersand installation ID.
     * @type {string}
     * @memberof Operation
     */
    installationId: string;
}

/**
 * Check if a given object implements the Operation interface.
 */
export function instanceOfOperation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "actionType" in value;
    isInstance = isInstance && "objectName" in value;
    isInstance = isInstance && "installationId" in value;

    return isInstance;
}

export function OperationFromJSON(json: any): Operation {
    return OperationFromJSONTyped(json, false);
}

export function OperationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Operation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'projectId': json['projectId'],
        'actionType': json['actionType'],
        'objectName': json['objectName'],
        'installationId': json['installationId'],
    };
}

export function OperationToJSON(value?: Operation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'projectId': value.projectId,
        'actionType': value.actionType,
        'objectName': value.objectName,
        'installationId': value.installationId,
    };
}

