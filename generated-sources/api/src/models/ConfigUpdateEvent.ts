/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConfigUpdateEvent
 */
export interface ConfigUpdateEvent {
    /**
     * Conditions to enable update events.
     * @type {string}
     * @memberof ConfigUpdateEvent
     */
    enabled: ConfigUpdateEventEnabledEnum;
    /**
     * Whether to watch fields all fields automatically.
     * @type {string}
     * @memberof ConfigUpdateEvent
     */
    watchFieldsAuto?: ConfigUpdateEventWatchFieldsAutoEnum;
    /**
     * The fields that should be watched.
     * @type {Array<string>}
     * @memberof ConfigUpdateEvent
     */
    requiredWatchFields?: Array<string>;
}


/**
 * @export
 */
export const ConfigUpdateEventEnabledEnum = {
    Always: 'always'
} as const;
export type ConfigUpdateEventEnabledEnum = typeof ConfigUpdateEventEnabledEnum[keyof typeof ConfigUpdateEventEnabledEnum];

/**
 * @export
 */
export const ConfigUpdateEventWatchFieldsAutoEnum = {
    All: 'all'
} as const;
export type ConfigUpdateEventWatchFieldsAutoEnum = typeof ConfigUpdateEventWatchFieldsAutoEnum[keyof typeof ConfigUpdateEventWatchFieldsAutoEnum];


/**
 * Check if a given object implements the ConfigUpdateEvent interface.
 */
export function instanceOfConfigUpdateEvent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "enabled" in value;

    return isInstance;
}

export function ConfigUpdateEventFromJSON(json: any): ConfigUpdateEvent {
    return ConfigUpdateEventFromJSONTyped(json, false);
}

export function ConfigUpdateEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigUpdateEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'watchFieldsAuto': !exists(json, 'watchFieldsAuto') ? undefined : json['watchFieldsAuto'],
        'requiredWatchFields': !exists(json, 'requiredWatchFields') ? undefined : json['requiredWatchFields'],
    };
}

export function ConfigUpdateEventToJSON(value?: ConfigUpdateEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'watchFieldsAuto': value.watchFieldsAuto,
        'requiredWatchFields': value.requiredWatchFields,
    };
}

