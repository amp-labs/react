/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MetadataItemInput } from './MetadataItemInput';
import {
    MetadataItemInputFromJSON,
    MetadataItemInputFromJSONTyped,
    MetadataItemInputToJSON,
} from './MetadataItemInput';
import type { MetadataItemPostAuthentication } from './MetadataItemPostAuthentication';
import {
    MetadataItemPostAuthenticationFromJSON,
    MetadataItemPostAuthenticationFromJSONTyped,
    MetadataItemPostAuthenticationToJSON,
} from './MetadataItemPostAuthentication';

/**
 * Provider metadata that needs to be given by the user or fetched by the connector post authentication for the connector to work.
 * @export
 * @interface ProviderMetadata
 */
export interface ProviderMetadata {
    /**
     * Metadata provided as manual input
     * @type {Array<MetadataItemInput>}
     * @memberof ProviderMetadata
     */
    input?: Array<MetadataItemInput>;
    /**
     * Metadata fetched by the connector post authentication
     * @type {Array<MetadataItemPostAuthentication>}
     * @memberof ProviderMetadata
     */
    postAuthentication?: Array<MetadataItemPostAuthentication>;
}

/**
 * Check if a given object implements the ProviderMetadata interface.
 */
export function instanceOfProviderMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProviderMetadataFromJSON(json: any): ProviderMetadata {
    return ProviderMetadataFromJSONTyped(json, false);
}

export function ProviderMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProviderMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'input': !exists(json, 'input') ? undefined : ((json['input'] as Array<any>).map(MetadataItemInputFromJSON)),
        'postAuthentication': !exists(json, 'postAuthentication') ? undefined : ((json['postAuthentication'] as Array<any>).map(MetadataItemPostAuthenticationFromJSON)),
    };
}

export function ProviderMetadataToJSON(value?: ProviderMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'input': value.input === undefined ? undefined : ((value.input as Array<any>).map(MetadataItemInputToJSON)),
        'postAuthentication': value.postAuthentication === undefined ? undefined : ((value.postAuthentication as Array<any>).map(MetadataItemPostAuthenticationToJSON)),
    };
}

