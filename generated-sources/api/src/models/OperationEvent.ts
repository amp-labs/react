/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OperationEvent
 */
export interface OperationEvent {
    /**
     * The operation event ID.
     * @type {string}
     * @memberof OperationEvent
     */
    id: string;
    /**
     * The operation ID.
     * @type {string}
     * @memberof OperationEvent
     */
    operationId: string;
    /**
     * The operation event type.
     * @type {string}
     * @memberof OperationEvent
     */
    type: string;
    /**
     * The status of the operation event.
     * @type {string}
     * @memberof OperationEvent
     */
    status: string;
    /**
     * The result of the operation event.
     * @type {string}
     * @memberof OperationEvent
     */
    result?: string;
    /**
     * The time the operation event was created.
     * @type {Date}
     * @memberof OperationEvent
     */
    createTime?: Date;
}

/**
 * Check if a given object implements the OperationEvent interface.
 */
export function instanceOfOperationEvent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "operationId" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function OperationEventFromJSON(json: any): OperationEvent {
    return OperationEventFromJSONTyped(json, false);
}

export function OperationEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): OperationEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'operationId': json['operationId'],
        'type': json['type'],
        'status': json['status'],
        'result': !exists(json, 'result') ? undefined : json['result'],
        'createTime': !exists(json, 'createTime') ? undefined : (new Date(json['createTime'])),
    };
}

export function OperationEventToJSON(value?: OperationEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'operationId': value.operationId,
        'type': value.type,
        'status': value.status,
        'result': value.result,
        'createTime': value.createTime === undefined ? undefined : (value.createTime.toISOString()),
    };
}

