/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Additional options for string fields
 * @export
 * @interface StringFieldOptions
 */
export interface StringFieldOptions {
    /**
     * Maximum length of the string field
     * @type {number}
     * @memberof StringFieldOptions
     */
    length?: number;
    /**
     * Regex pattern that the string field value must match
     * @type {string}
     * @memberof StringFieldOptions
     */
    pattern?: string;
    /**
     * List of allowed values for enum fields
     * @type {Array<string>}
     * @memberof StringFieldOptions
     */
    values?: Array<string>;
    /**
     * Indicates if the field value must be limited to what's in Values
     * @type {boolean}
     * @memberof StringFieldOptions
     */
    valuesRestricted?: boolean;
    /**
     * Default value for the field
     * @type {string}
     * @memberof StringFieldOptions
     */
    defaultValue?: string;
}

/**
 * Check if a given object implements the StringFieldOptions interface.
 */
export function instanceOfStringFieldOptions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StringFieldOptionsFromJSON(json: any): StringFieldOptions {
    return StringFieldOptionsFromJSONTyped(json, false);
}

export function StringFieldOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): StringFieldOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'length': !exists(json, 'length') ? undefined : json['length'],
        'pattern': !exists(json, 'pattern') ? undefined : json['pattern'],
        'values': !exists(json, 'values') ? undefined : json['values'],
        'valuesRestricted': !exists(json, 'valuesRestricted') ? undefined : json['valuesRestricted'],
        'defaultValue': !exists(json, 'defaultValue') ? undefined : json['defaultValue'],
    };
}

export function StringFieldOptionsToJSON(value?: StringFieldOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'length': value.length,
        'pattern': value.pattern,
        'values': value.values,
        'valuesRestricted': value.valuesRestricted,
        'defaultValue': value.defaultValue,
    };
}

