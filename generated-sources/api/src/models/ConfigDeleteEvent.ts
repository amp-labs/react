/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConfigDeleteEvent
 */
export interface ConfigDeleteEvent {
    /**
     * Conditions to enable delete events.
     * @type {string}
     * @memberof ConfigDeleteEvent
     */
    enabled: ConfigDeleteEventEnabledEnum;
}


/**
 * @export
 */
export const ConfigDeleteEventEnabledEnum = {
    Always: 'always',
    Never: 'never'
} as const;
export type ConfigDeleteEventEnabledEnum = typeof ConfigDeleteEventEnabledEnum[keyof typeof ConfigDeleteEventEnabledEnum];


/**
 * Check if a given object implements the ConfigDeleteEvent interface.
 */
export function instanceOfConfigDeleteEvent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "enabled" in value;

    return isInstance;
}

export function ConfigDeleteEventFromJSON(json: any): ConfigDeleteEvent {
    return ConfigDeleteEventFromJSONTyped(json, false);
}

export function ConfigDeleteEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigDeleteEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
    };
}

export function ConfigDeleteEventToJSON(value?: ConfigDeleteEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
    };
}

