/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BatchWriteSupportConfig } from './BatchWriteSupportConfig';
import {
    BatchWriteSupportConfigFromJSON,
    BatchWriteSupportConfigFromJSONTyped,
    BatchWriteSupportConfigToJSON,
} from './BatchWriteSupportConfig';

/**
 * 
 * @export
 * @interface BatchWriteSupport
 */
export interface BatchWriteSupport {
    /**
     * 
     * @type {BatchWriteSupportConfig}
     * @memberof BatchWriteSupport
     */
    _delete: BatchWriteSupportConfig;
    /**
     * 
     * @type {BatchWriteSupportConfig}
     * @memberof BatchWriteSupport
     */
    create: BatchWriteSupportConfig;
    /**
     * 
     * @type {BatchWriteSupportConfig}
     * @memberof BatchWriteSupport
     */
    update: BatchWriteSupportConfig;
    /**
     * 
     * @type {BatchWriteSupportConfig}
     * @memberof BatchWriteSupport
     */
    upsert: BatchWriteSupportConfig;
}

/**
 * Check if a given object implements the BatchWriteSupport interface.
 */
export function instanceOfBatchWriteSupport(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "_delete" in value;
    isInstance = isInstance && "create" in value;
    isInstance = isInstance && "update" in value;
    isInstance = isInstance && "upsert" in value;

    return isInstance;
}

export function BatchWriteSupportFromJSON(json: any): BatchWriteSupport {
    return BatchWriteSupportFromJSONTyped(json, false);
}

export function BatchWriteSupportFromJSONTyped(json: any, ignoreDiscriminator: boolean): BatchWriteSupport {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_delete': BatchWriteSupportConfigFromJSON(json['delete']),
        'create': BatchWriteSupportConfigFromJSON(json['create']),
        'update': BatchWriteSupportConfigFromJSON(json['update']),
        'upsert': BatchWriteSupportConfigFromJSON(json['upsert']),
    };
}

export function BatchWriteSupportToJSON(value?: BatchWriteSupport | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'delete': BatchWriteSupportConfigToJSON(value._delete),
        'create': BatchWriteSupportConfigToJSON(value.create),
        'update': BatchWriteSupportConfigToJSON(value.update),
        'upsert': BatchWriteSupportConfigToJSON(value.upsert),
    };
}

