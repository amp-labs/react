/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Array & Array<string> } from './Array &amp; Array&lt;string&gt;';
import {
    Array &amp; Array&lt;string&gt;FromJSON,
    Array &amp; Array&lt;string&gt;FromJSONTyped,
    Array &amp; Array&lt;string&gt;ToJSON,
} from './Array &amp; Array&lt;string&gt;';
import type { UpdateInstallationRequestInstallation } from './UpdateInstallationRequestInstallation';
import {
    UpdateInstallationRequestInstallationFromJSON,
    UpdateInstallationRequestInstallationFromJSONTyped,
    UpdateInstallationRequestInstallationToJSON,
} from './UpdateInstallationRequestInstallation';

/**
 * 
 * @export
 * @interface UpdateInstallationRequest
 */
export interface UpdateInstallationRequest {
    /**
     * 
     * @type {Array & Array<string>}
     * @memberof UpdateInstallationRequest
     */
    updateMask: Array & Array<string>;
    /**
     * 
     * @type {UpdateInstallationRequestInstallation}
     * @memberof UpdateInstallationRequest
     */
    installation: UpdateInstallationRequestInstallation;
}

/**
 * Check if a given object implements the UpdateInstallationRequest interface.
 */
export function instanceOfUpdateInstallationRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "updateMask" in value;
    isInstance = isInstance && "installation" in value;

    return isInstance;
}

export function UpdateInstallationRequestFromJSON(json: any): UpdateInstallationRequest {
    return UpdateInstallationRequestFromJSONTyped(json, false);
}

export function UpdateInstallationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateInstallationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'updateMask': Array &amp; Array&lt;string&gt;FromJSON(json['updateMask']),
        'installation': UpdateInstallationRequestInstallationFromJSON(json['installation']),
    };
}

export function UpdateInstallationRequestToJSON(value?: UpdateInstallationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'updateMask': Array &amp; Array&lt;string&gt;ToJSON(value.updateMask),
        'installation': UpdateInstallationRequestInstallationToJSON(value.installation),
    };
}

