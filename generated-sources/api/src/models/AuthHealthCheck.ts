/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A URL to check the health of a provider's credentials. It's used to see if the credentials are valid and if the provider is reachable.
 * @export
 * @interface AuthHealthCheck
 */
export interface AuthHealthCheck {
    /**
     * a no-op URL to check the health of the credentials. The URL MUST not mutate any state. If the provider doesn't have such an endpoint, then don't provide credentialsHealthCheck.
     * @type {string}
     * @memberof AuthHealthCheck
     */
    url: string;
    /**
     * The HTTP method to use for the health check. If not set, defaults to GET.
     * @type {string}
     * @memberof AuthHealthCheck
     */
    method?: string;
    /**
     * The HTTP status codes that indicate a successful health check. If not set, defaults to 200 and 204.
     * @type {Array<number>}
     * @memberof AuthHealthCheck
     */
    successStatusCodes?: Array<number>;
}

/**
 * Check if a given object implements the AuthHealthCheck interface.
 */
export function instanceOfAuthHealthCheck(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "url" in value;

    return isInstance;
}

export function AuthHealthCheckFromJSON(json: any): AuthHealthCheck {
    return AuthHealthCheckFromJSONTyped(json, false);
}

export function AuthHealthCheckFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthHealthCheck {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': json['url'],
        'method': !exists(json, 'method') ? undefined : json['method'],
        'successStatusCodes': !exists(json, 'successStatusCodes') ? undefined : json['successStatusCodes'],
    };
}

export function AuthHealthCheckToJSON(value?: AuthHealthCheck | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'method': value.method,
        'successStatusCodes': value.successStatusCodes,
    };
}

