/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MetadataItemPostAuthentication
 */
export interface MetadataItemPostAuthentication {
    /**
     * The internal identifier for the metadata field
     * @type {string}
     * @memberof MetadataItemPostAuthentication
     */
    name: string;
    /**
     * Does this metadata item only apply to a specific module?
     * @type {{ [key: string]: object; }}
     * @memberof MetadataItemPostAuthentication
     */
    moduleDependencies?: { [key: string]: object; };
}

/**
 * Check if a given object implements the MetadataItemPostAuthentication interface.
 */
export function instanceOfMetadataItemPostAuthentication(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function MetadataItemPostAuthenticationFromJSON(json: any): MetadataItemPostAuthentication {
    return MetadataItemPostAuthenticationFromJSONTyped(json, false);
}

export function MetadataItemPostAuthenticationFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetadataItemPostAuthentication {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'moduleDependencies': !exists(json, 'moduleDependencies') ? undefined : json['moduleDependencies'],
    };
}

export function MetadataItemPostAuthenticationToJSON(value?: MetadataItemPostAuthentication | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'moduleDependencies': value.moduleDependencies,
    };
}

