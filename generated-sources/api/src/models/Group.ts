/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Group
 */
export interface Group {
    /**
     * The ID of the user group that has access to this installation.
     * @type {string}
     * @memberof Group
     */
    groupRef: string;
    /**
     * The name of the user group that has access to this installation.
     * @type {string}
     * @memberof Group
     */
    groupName: string;
    /**
     * The Ampersand project ID.
     * @type {string}
     * @memberof Group
     */
    projectId: string;
    /**
     * The time the group was created.
     * @type {Date}
     * @memberof Group
     */
    createTime: Date;
    /**
     * The time the group was last updated.
     * @type {Date}
     * @memberof Group
     */
    updateTime?: Date;
}

/**
 * Check if a given object implements the Group interface.
 */
export function instanceOfGroup(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "groupRef" in value;
    isInstance = isInstance && "groupName" in value;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "createTime" in value;

    return isInstance;
}

export function GroupFromJSON(json: any): Group {
    return GroupFromJSONTyped(json, false);
}

export function GroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): Group {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'groupRef': json['groupRef'],
        'groupName': json['groupName'],
        'projectId': json['projectId'],
        'createTime': (new Date(json['createTime'])),
        'updateTime': !exists(json, 'updateTime') ? undefined : (new Date(json['updateTime'])),
    };
}

export function GroupToJSON(value?: Group | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'groupRef': value.groupRef,
        'groupName': value.groupName,
        'projectId': value.projectId,
        'createTime': (value.createTime.toISOString()),
        'updateTime': value.updateTime === undefined ? undefined : (value.updateTime.toISOString()),
    };
}

