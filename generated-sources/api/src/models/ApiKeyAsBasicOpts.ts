/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * when this object is present, it means that this provider uses Basic Auth to actually collect an API key
 * @export
 * @interface ApiKeyAsBasicOpts
 */
export interface ApiKeyAsBasicOpts {
    /**
     * whether the API key should be used as the username or password.
     * @type {string}
     * @memberof ApiKeyAsBasicOpts
     */
    fieldUsed?: ApiKeyAsBasicOptsFieldUsedEnum;
    /**
     * How to transform the API key in to a basic auth user:pass string. The %s is replaced with the API key value.
     * @type {string}
     * @memberof ApiKeyAsBasicOpts
     */
    keyFormat?: string;
}


/**
 * @export
 */
export const ApiKeyAsBasicOptsFieldUsedEnum = {
    UsernameField: 'username',
    PasswordField: 'password'
} as const;
export type ApiKeyAsBasicOptsFieldUsedEnum = typeof ApiKeyAsBasicOptsFieldUsedEnum[keyof typeof ApiKeyAsBasicOptsFieldUsedEnum];


/**
 * Check if a given object implements the ApiKeyAsBasicOpts interface.
 */
export function instanceOfApiKeyAsBasicOpts(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ApiKeyAsBasicOptsFromJSON(json: any): ApiKeyAsBasicOpts {
    return ApiKeyAsBasicOptsFromJSONTyped(json, false);
}

export function ApiKeyAsBasicOptsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiKeyAsBasicOpts {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fieldUsed': !exists(json, 'fieldUsed') ? undefined : json['fieldUsed'],
        'keyFormat': !exists(json, 'keyFormat') ? undefined : json['keyFormat'],
    };
}

export function ApiKeyAsBasicOptsToJSON(value?: ApiKeyAsBasicOpts | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fieldUsed': value.fieldUsed,
        'keyFormat': value.keyFormat,
    };
}

