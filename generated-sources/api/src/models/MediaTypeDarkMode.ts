/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Media to be used in dark mode.
 * @export
 * @interface MediaTypeDarkMode
 */
export interface MediaTypeDarkMode {
    /**
     * URL to the icon for the provider that is to be used in dark mode.
     * @type {string}
     * @memberof MediaTypeDarkMode
     */
    iconURL?: string;
    /**
     * URL to the logo for the provider that is to be used in dark mode.
     * @type {string}
     * @memberof MediaTypeDarkMode
     */
    logoURL?: string;
}

/**
 * Check if a given object implements the MediaTypeDarkMode interface.
 */
export function instanceOfMediaTypeDarkMode(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MediaTypeDarkModeFromJSON(json: any): MediaTypeDarkMode {
    return MediaTypeDarkModeFromJSONTyped(json, false);
}

export function MediaTypeDarkModeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaTypeDarkMode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'iconURL': !exists(json, 'iconURL') ? undefined : json['iconURL'],
        'logoURL': !exists(json, 'logoURL') ? undefined : json['logoURL'],
    };
}

export function MediaTypeDarkModeToJSON(value?: MediaTypeDarkMode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'iconURL': value.iconURL,
        'logoURL': value.logoURL,
    };
}

