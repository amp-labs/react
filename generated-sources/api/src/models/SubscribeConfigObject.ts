/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConfigCreateEvent } from './ConfigCreateEvent';
import {
    ConfigCreateEventFromJSON,
    ConfigCreateEventFromJSONTyped,
    ConfigCreateEventToJSON,
} from './ConfigCreateEvent';
import type { ConfigDeleteEvent } from './ConfigDeleteEvent';
import {
    ConfigDeleteEventFromJSON,
    ConfigDeleteEventFromJSONTyped,
    ConfigDeleteEventToJSON,
} from './ConfigDeleteEvent';
import type { ConfigUpdateEvent } from './ConfigUpdateEvent';
import {
    ConfigUpdateEventFromJSON,
    ConfigUpdateEventFromJSONTyped,
    ConfigUpdateEventToJSON,
} from './ConfigUpdateEvent';

/**
 * 
 * @export
 * @interface SubscribeConfigObject
 */
export interface SubscribeConfigObject {
    /**
     * Whether to inherit fields and mappings from the read config.
     * @type {boolean}
     * @memberof SubscribeConfigObject
     */
    inheritFieldsAndMappings: boolean;
    /**
     * The name of the object to subscribe to.
     * @type {string}
     * @memberof SubscribeConfigObject
     */
    objectName: string;
    /**
     * The name of the destination that the result should be sent to.
     * @type {string}
     * @memberof SubscribeConfigObject
     */
    destination: string;
    /**
     * 
     * @type {ConfigCreateEvent}
     * @memberof SubscribeConfigObject
     */
    createEvent?: ConfigCreateEvent;
    /**
     * 
     * @type {ConfigUpdateEvent}
     * @memberof SubscribeConfigObject
     */
    updateEvent?: ConfigUpdateEvent;
    /**
     * 
     * @type {ConfigDeleteEvent}
     * @memberof SubscribeConfigObject
     */
    deleteEvent?: ConfigDeleteEvent;
}

/**
 * Check if a given object implements the SubscribeConfigObject interface.
 */
export function instanceOfSubscribeConfigObject(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "inheritFieldsAndMappings" in value;
    isInstance = isInstance && "objectName" in value;
    isInstance = isInstance && "destination" in value;

    return isInstance;
}

export function SubscribeConfigObjectFromJSON(json: any): SubscribeConfigObject {
    return SubscribeConfigObjectFromJSONTyped(json, false);
}

export function SubscribeConfigObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscribeConfigObject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'inheritFieldsAndMappings': json['inheritFieldsAndMappings'],
        'objectName': json['objectName'],
        'destination': json['destination'],
        'createEvent': !exists(json, 'createEvent') ? undefined : ConfigCreateEventFromJSON(json['createEvent']),
        'updateEvent': !exists(json, 'updateEvent') ? undefined : ConfigUpdateEventFromJSON(json['updateEvent']),
        'deleteEvent': !exists(json, 'deleteEvent') ? undefined : ConfigDeleteEventFromJSON(json['deleteEvent']),
    };
}

export function SubscribeConfigObjectToJSON(value?: SubscribeConfigObject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'inheritFieldsAndMappings': value.inheritFieldsAndMappings,
        'objectName': value.objectName,
        'destination': value.destination,
        'createEvent': ConfigCreateEventToJSON(value.createEvent),
        'updateEvent': ConfigUpdateEventToJSON(value.updateEvent),
        'deleteEvent': ConfigDeleteEventToJSON(value.deleteEvent),
    };
}

