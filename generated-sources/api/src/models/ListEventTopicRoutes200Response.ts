/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NotificationEventTopicRoute } from './NotificationEventTopicRoute';
import {
    NotificationEventTopicRouteFromJSON,
    NotificationEventTopicRouteFromJSONTyped,
    NotificationEventTopicRouteToJSON,
} from './NotificationEventTopicRoute';

/**
 * 
 * @export
 * @interface ListEventTopicRoutes200Response
 */
export interface ListEventTopicRoutes200Response {
    /**
     * 
     * @type {Array<NotificationEventTopicRoute>}
     * @memberof ListEventTopicRoutes200Response
     */
    eventTopicRoutes?: Array<NotificationEventTopicRoute>;
}

/**
 * Check if a given object implements the ListEventTopicRoutes200Response interface.
 */
export function instanceOfListEventTopicRoutes200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ListEventTopicRoutes200ResponseFromJSON(json: any): ListEventTopicRoutes200Response {
    return ListEventTopicRoutes200ResponseFromJSONTyped(json, false);
}

export function ListEventTopicRoutes200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListEventTopicRoutes200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eventTopicRoutes': !exists(json, 'eventTopicRoutes') ? undefined : ((json['eventTopicRoutes'] as Array<any>).map(NotificationEventTopicRouteFromJSON)),
    };
}

export function ListEventTopicRoutes200ResponseToJSON(value?: ListEventTopicRoutes200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'eventTopicRoutes': value.eventTopicRoutes === undefined ? undefined : ((value.eventTopicRoutes as Array<any>).map(NotificationEventTopicRouteToJSON)),
    };
}

