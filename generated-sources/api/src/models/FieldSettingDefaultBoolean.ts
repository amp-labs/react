/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FieldSettingDefaultBooleanDefault } from './FieldSettingDefaultBooleanDefault';
import {
    FieldSettingDefaultBooleanDefaultFromJSON,
    FieldSettingDefaultBooleanDefaultFromJSONTyped,
    FieldSettingDefaultBooleanDefaultToJSON,
} from './FieldSettingDefaultBooleanDefault';

/**
 * 
 * @export
 * @interface FieldSettingDefaultBoolean
 */
export interface FieldSettingDefaultBoolean {
    /**
     * 
     * @type {FieldSettingDefaultBooleanDefault}
     * @memberof FieldSettingDefaultBoolean
     */
    _default: FieldSettingDefaultBooleanDefault;
    /**
     * Whether the default value should be applied when creating a record.
     * @type {string}
     * @memberof FieldSettingDefaultBoolean
     */
    writeOnCreate: FieldSettingDefaultBooleanWriteOnCreateEnum;
    /**
     * Whether the default value should be applied when updating a record.
     * @type {string}
     * @memberof FieldSettingDefaultBoolean
     */
    writeOnUpdate: FieldSettingDefaultBooleanWriteOnUpdateEnum;
}


/**
 * @export
 */
export const FieldSettingDefaultBooleanWriteOnCreateEnum = {
    Always: 'always',
    Never: 'never'
} as const;
export type FieldSettingDefaultBooleanWriteOnCreateEnum = typeof FieldSettingDefaultBooleanWriteOnCreateEnum[keyof typeof FieldSettingDefaultBooleanWriteOnCreateEnum];

/**
 * @export
 */
export const FieldSettingDefaultBooleanWriteOnUpdateEnum = {
    Always: 'always',
    Never: 'never'
} as const;
export type FieldSettingDefaultBooleanWriteOnUpdateEnum = typeof FieldSettingDefaultBooleanWriteOnUpdateEnum[keyof typeof FieldSettingDefaultBooleanWriteOnUpdateEnum];


/**
 * Check if a given object implements the FieldSettingDefaultBoolean interface.
 */
export function instanceOfFieldSettingDefaultBoolean(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "_default" in value;
    isInstance = isInstance && "writeOnCreate" in value;
    isInstance = isInstance && "writeOnUpdate" in value;

    return isInstance;
}

export function FieldSettingDefaultBooleanFromJSON(json: any): FieldSettingDefaultBoolean {
    return FieldSettingDefaultBooleanFromJSONTyped(json, false);
}

export function FieldSettingDefaultBooleanFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldSettingDefaultBoolean {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_default': FieldSettingDefaultBooleanDefaultFromJSON(json['default']),
        'writeOnCreate': json['writeOnCreate'],
        'writeOnUpdate': json['writeOnUpdate'],
    };
}

export function FieldSettingDefaultBooleanToJSON(value?: FieldSettingDefaultBoolean | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'default': FieldSettingDefaultBooleanDefaultToJSON(value._default),
        'writeOnCreate': value.writeOnCreate,
        'writeOnUpdate': value.writeOnUpdate,
    };
}

