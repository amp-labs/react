/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DestinationMetadata } from './DestinationMetadata';
import {
    DestinationMetadataFromJSON,
    DestinationMetadataFromJSONTyped,
    DestinationMetadataToJSON,
} from './DestinationMetadata';

/**
 * 
 * @export
 * @interface Destination
 */
export interface Destination {
    /**
     * User-friendly name for the destination
     * @type {string}
     * @memberof Destination
     */
    name: string;
    /**
     * The type of the destination
     * @type {string}
     * @memberof Destination
     */
    type: string;
    /**
     * 
     * @type {DestinationMetadata}
     * @memberof Destination
     */
    metadata: DestinationMetadata;
}

/**
 * Check if a given object implements the Destination interface.
 */
export function instanceOfDestination(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "metadata" in value;

    return isInstance;
}

export function DestinationFromJSON(json: any): Destination {
    return DestinationFromJSONTyped(json, false);
}

export function DestinationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Destination {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'metadata': DestinationMetadataFromJSON(json['metadata']),
    };
}

export function DestinationToJSON(value?: Destination | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
        'metadata': DestinationMetadataToJSON(value.metadata),
    };
}

