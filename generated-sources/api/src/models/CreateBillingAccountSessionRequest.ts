/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateBillingAccountSessionRequest
 */
export interface CreateBillingAccountSessionRequest {
    /**
     * The URL to redirect to once a portal session is exited.
     * @type {string}
     * @memberof CreateBillingAccountSessionRequest
     */
    redirectUrl: string;
    /**
     * The number of seconds before the portal session expires.
     * @type {number}
     * @memberof CreateBillingAccountSessionRequest
     */
    timeout?: number;
}

/**
 * Check if a given object implements the CreateBillingAccountSessionRequest interface.
 */
export function instanceOfCreateBillingAccountSessionRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "redirectUrl" in value;

    return isInstance;
}

export function CreateBillingAccountSessionRequestFromJSON(json: any): CreateBillingAccountSessionRequest {
    return CreateBillingAccountSessionRequestFromJSONTyped(json, false);
}

export function CreateBillingAccountSessionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateBillingAccountSessionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'redirectUrl': json['redirectUrl'],
        'timeout': !exists(json, 'timeout') ? undefined : json['timeout'],
    };
}

export function CreateBillingAccountSessionRequestToJSON(value?: CreateBillingAccountSessionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'redirectUrl': value.redirectUrl,
        'timeout': value.timeout,
    };
}

