/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    FieldSettingDefaultBoolean,
    instanceOfFieldSettingDefaultBoolean,
    FieldSettingDefaultBooleanFromJSON,
    FieldSettingDefaultBooleanFromJSONTyped,
    FieldSettingDefaultBooleanToJSON,
} from './FieldSettingDefaultBoolean';
import {
    FieldSettingDefaultInteger,
    instanceOfFieldSettingDefaultInteger,
    FieldSettingDefaultIntegerFromJSON,
    FieldSettingDefaultIntegerFromJSONTyped,
    FieldSettingDefaultIntegerToJSON,
} from './FieldSettingDefaultInteger';
import {
    FieldSettingDefaultString,
    instanceOfFieldSettingDefaultString,
    FieldSettingDefaultStringFromJSON,
    FieldSettingDefaultStringFromJSONTyped,
    FieldSettingDefaultStringToJSON,
} from './FieldSettingDefaultString';

/**
 * @type FieldSetting
 * 
 * @export
 */
export type FieldSetting = FieldSettingDefaultBoolean | FieldSettingDefaultInteger | FieldSettingDefaultString;

export function FieldSettingFromJSON(json: any): FieldSetting {
    return FieldSettingFromJSONTyped(json, false);
}

export function FieldSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldSetting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...FieldSettingDefaultBooleanFromJSONTyped(json, true), ...FieldSettingDefaultIntegerFromJSONTyped(json, true), ...FieldSettingDefaultStringFromJSONTyped(json, true) };
}

export function FieldSettingToJSON(value?: FieldSetting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (instanceOfFieldSettingDefaultBoolean(value)) {
        return FieldSettingDefaultBooleanToJSON(value as FieldSettingDefaultBoolean);
    }
    if (instanceOfFieldSettingDefaultInteger(value)) {
        return FieldSettingDefaultIntegerToJSON(value as FieldSettingDefaultInteger);
    }
    if (instanceOfFieldSettingDefaultString(value)) {
        return FieldSettingDefaultStringToJSON(value as FieldSettingDefaultString);
    }

    return {};
}

