/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MediaTypeDarkMode } from './MediaTypeDarkMode';
import {
    MediaTypeDarkModeFromJSON,
    MediaTypeDarkModeFromJSONTyped,
    MediaTypeDarkModeToJSON,
} from './MediaTypeDarkMode';
import type { MediaTypeRegular } from './MediaTypeRegular';
import {
    MediaTypeRegularFromJSON,
    MediaTypeRegularFromJSONTyped,
    MediaTypeRegularToJSON,
} from './MediaTypeRegular';

/**
 * 
 * @export
 * @interface Media
 */
export interface Media {
    /**
     * 
     * @type {MediaTypeRegular}
     * @memberof Media
     */
    regular?: MediaTypeRegular;
    /**
     * 
     * @type {MediaTypeDarkMode}
     * @memberof Media
     */
    darkMode?: MediaTypeDarkMode;
}

/**
 * Check if a given object implements the Media interface.
 */
export function instanceOfMedia(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MediaFromJSON(json: any): Media {
    return MediaFromJSONTyped(json, false);
}

export function MediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Media {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'regular': !exists(json, 'regular') ? undefined : MediaTypeRegularFromJSON(json['regular']),
        'darkMode': !exists(json, 'darkMode') ? undefined : MediaTypeDarkModeFromJSON(json['darkMode']),
    };
}

export function MediaToJSON(value?: Media | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'regular': MediaTypeRegularToJSON(value.regular),
        'darkMode': MediaTypeDarkModeToJSON(value.darkMode),
    };
}

