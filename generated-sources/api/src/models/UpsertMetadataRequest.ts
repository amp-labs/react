/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FieldDefinition } from './FieldDefinition';
import {
    FieldDefinitionFromJSON,
    FieldDefinitionFromJSONTyped,
    FieldDefinitionToJSON,
} from './FieldDefinition';

/**
 * Request payload for upserting metadata (fields only)
 * @export
 * @interface UpsertMetadataRequest
 */
export interface UpsertMetadataRequest {
    /**
     * Maps object names to field definitions
     * @type {{ [key: string]: Array<FieldDefinition>; }}
     * @memberof UpsertMetadataRequest
     */
    fields: { [key: string]: Array<FieldDefinition>; };
}

/**
 * Check if a given object implements the UpsertMetadataRequest interface.
 */
export function instanceOfUpsertMetadataRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fields" in value;

    return isInstance;
}

export function UpsertMetadataRequestFromJSON(json: any): UpsertMetadataRequest {
    return UpsertMetadataRequestFromJSONTyped(json, false);
}

export function UpsertMetadataRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpsertMetadataRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fields': json['fields'],
    };
}

export function UpsertMetadataRequestToJSON(value?: UpsertMetadataRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fields': value.fields,
    };
}

