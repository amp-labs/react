/* tslint:disable */
/* eslint-disable */
/**
 * Ampersand public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The refresh token to use for the connection.
 * @export
 * @interface Oauth2AuthorizationCodeRefreshToken
 */
export interface Oauth2AuthorizationCodeRefreshToken {
    /**
     * 
     * @type {string}
     * @memberof Oauth2AuthorizationCodeRefreshToken
     */
    token: string;
    /**
     * 
     * @type {Date}
     * @memberof Oauth2AuthorizationCodeRefreshToken
     */
    expiresAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Oauth2AuthorizationCodeRefreshToken
     */
    issuedAt?: Date;
}

/**
 * Check if a given object implements the Oauth2AuthorizationCodeRefreshToken interface.
 */
export function instanceOfOauth2AuthorizationCodeRefreshToken(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "token" in value;

    return isInstance;
}

export function Oauth2AuthorizationCodeRefreshTokenFromJSON(json: any): Oauth2AuthorizationCodeRefreshToken {
    return Oauth2AuthorizationCodeRefreshTokenFromJSONTyped(json, false);
}

export function Oauth2AuthorizationCodeRefreshTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Oauth2AuthorizationCodeRefreshToken {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'token': json['token'],
        'expiresAt': !exists(json, 'expiresAt') ? undefined : (new Date(json['expiresAt'])),
        'issuedAt': !exists(json, 'issuedAt') ? undefined : (new Date(json['issuedAt'])),
    };
}

export function Oauth2AuthorizationCodeRefreshTokenToJSON(value?: Oauth2AuthorizationCodeRefreshToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'token': value.token,
        'expiresAt': value.expiresAt === undefined ? undefined : (value.expiresAt.toISOString()),
        'issuedAt': value.issuedAt === undefined ? undefined : (value.issuedAt.toISOString()),
    };
}

